# See https://fly.io/docs/app-guides/continuous-deployment-with-github-actions/

name: Deploy app to fly.io
on:
  push:
    branches:
      - main
jobs:
  deploy-to-fly-dot-io: # See https://github.com/ben-perrier/polka-ui/actions
    name: Deploy app to fly.io
    runs-on: ubuntu-latest # it is pretty standard to use ubuntu-latest in the continuous integration world
    concurrency: deploy-group # optional: ensure only one action runs at a time
    steps:
      # See https://github.com/actions/checkout
      - name: "Checkout github repo"
        uses: actions/checkout@v4

      # See https://github.com/superfly/flyctl-actions
      - name: "Install flyctl"
        uses: superfly/flyctl-actions/setup-flyctl@master

      # See https://fly.io/docs/flyctl/deploy/
      - name: "Run flyctl deploy script"
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      # See https://fly.io/docs/flyctl/deploy/
      - name: "create version file"
        run: echo $GIT_REVISION >> git-version.txt
      - name: "check folder"
        run: ls -ltr
      - name: "print file"
        run:
          echo "$(<git-version.txt )"
          # echo ${{ github.run_id }}
          # echo ${{ github.run_number }}
          # echo ${{ github.run_attempt }}
          # ls -ltr
          # echo "$(<git-version.txt )"

      # Playing with github context
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
